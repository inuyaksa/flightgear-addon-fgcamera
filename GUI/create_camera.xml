<?xml version="1.0"?>

<PropertyList>
	<name>create-new-camera</name>
	<layout>vbox</layout>
	<width>330</width>
	<height>130</height>

	<group>
		<layout>hbox</layout>

		<empty><stretch>1</stretch></empty>

		<text>
			<label>Create new camera</label>
		</text>

		<empty><stretch>1</stretch></empty>

		<button>
			<legend> </legend>
			<key>Esc</key>
			<pref-width>16</pref-width>
			<pref-height>16</pref-height>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>

	</group>

	<hrule/>

	<group>
		<layout>hbox</layout>

		<text>
			<label>Camera type:</label>
			<valign>fill</valign>
			<halign>left</halign>
		</text>

		<combo>
			<name>camera-types</name>
			<halign>fill</halign>
			<stretch>1</stretch>
			<property>/sim/fgcamera/dialogs/create-camera/camera-type</property>
			<binding>
				<command>dialog-apply</command>
				<object-name>camera-types</object-name>
			</binding>
			<binding>
				<command>nasal</command>
				<script>select_type()</script>
			</binding>
			<value>cockpit</value>
			<value>aircraft (look at)</value>
			<value>aircraft (look from)</value>
			<value>world (look at) n/a</value>
			<value>world (look from)</value>
		</combo>

		<checkbox>
			<name>internal-view</name>
			<halign>fill</halign>
			<stretch>1</stretch>
			<height>25</height>
			<property>/sim/fgcamera/dialogs/create-camera/internal</property>
			<label>Internal</label>
			<binding>
				<command>dialog-apply</command>
				<object-name>internal-view</object-name>
			</binding>
		</checkbox>

	</group>

	<group>
		<layout>hbox</layout>

		<text>
			<label>Camera name:</label>
			<valign>fill</valign>
			<halign>left</halign>
		</text>

		<input>
			<name>camera-name</name>
			<halign>fill</halign>
			<stretch>1</stretch>
			<live>true</live>
			<property>/sim/fgcamera/dialogs/create-camera/camera-name</property>
			<binding>
				<command>dialog-apply</command>
				<object-name>camera-name</object-name>
			</binding>
		</input>

	</group>

	<hrule/>

	<group>
		<layout>hbox</layout>
		<empty><stretch>1</stretch></empty>
		<button>
			<legend>Create</legend>
			<pref-width>90</pref-width>
			<pref-height>30</pref-height>
			<binding>
				<command>nasal</command>
				<script>create_camera()</script>
			</binding>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>

		<button>
			<legend>Cancel</legend>
			<pref-width>90</pref-width>
			<pref-height>30</pref-height>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>
		<empty><stretch>1</stretch></empty>
	</group>

	<nasal>
		<open> <![CDATA[
			if (getprop("/sim/fgcamera/dialogs/create-camera/camera-type") == nil) {
				setprop("/sim/fgcamera/dialogs/create-camera/camera-type", "cockpit");
			}
			var cameraN   = props.Node.new();
			var path      = fgcamera.my_root_path ~ "/default-cameras.xml";
			var type      = nil;
			props.copy(io.read_properties(path), cameraN);

			#==================================================
			#	Functions
			#==================================================
			var set_tower = func (twr) {
				var list = [
					"latitude-deg",
					"longitude-deg",
					"altitude-ft",
					"heading-deg",
					"pitch-deg",
					"roll-deg",
				];

				foreach (var a; list) {
					twr[a] = getprop("/sim/tower/" ~ a);
				}

				return twr;
			}
			#==================================================
			#	Select camera type
			#==================================================
			var select_type = func {
				var selected = getprop("/sim/fgcamera/dialogs/create-camera/camera-type") or "cockpit";
				var types    = [
					["cockpit"              , "FGCamera1"],
					["aircraft (look at)"   , "FGCamera2"],
					["aircraft (look from)" , "FGCamera3"],
					["world (look at)"      , "FGCamera4"],
					["world (look from)"    , "FGCamera5"],
				];

                setprop("/sim/fgcamera/dialogs/create-camera/internal", (selected != "cockpit") ? 0 : 1 );
				dialog_update("internal-view");

				foreach(var a; types) {
					if (selected == a[0]) {
						(type = a[1]) and break;
					}
				}
			}
			#--------------------------------------------------
			var dialog_update = func (dlg_obj = nil) {
				var hash = {
					"object-name" : dlg_obj,
					"dialog-name" : "current-camera-settings"
				};
				fgcommand( "dialog-update", props.Node.new(hash) );
			}			
			#==================================================
			#	Create new camera
			#==================================================
			var create_camera = func {

				var current_id = fgcamera.current[1];
				var current_camera  = fgcamera.cameras[current_id];

				var camera   = {};
				var camera_name = getprop("/sim/fgcamera/dialogs/create-camera/camera-name") or "new camera";

				camera       = cameraN.getChild("camera").getValues();
				camera.name  = camera_name;
				camera.type  = type;

				#camera.offsets = current_camera.offsets[0:];
				camera.offsets = fgcamera.manager._get_offsets();

				if (type == "FGCamera5") {
					camera.tower = set_tower(camera.tower);
				}

				camera.fov = fgcamera.manager._get_FOV();
				camera["internal"] = getprop("/sim/fgcamera/dialogs/create-camera/internal");

				append(fgcamera.cameras, camera);
				setprop("/sim/fgcamera/current-camera/camera-id", size(fgcamera.cameras) - 1);
			}

			#==================================================
			select_type();
		]]> </open>
	</nasal>
</PropertyList>
